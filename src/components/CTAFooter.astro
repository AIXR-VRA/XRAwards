---
/**
 * CTA Footer Component
 * Reusable call-to-action footer section with email signup form
 */
---

<section class="py-16 bg-[#0E1022] border-t-2 border-dotted border-[#FF7733]">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex flex-col lg:flex-row items-center justify-between gap-8 lg:gap-12">
      <!-- Left Content -->
      <div class="flex-1">
        <h2 class="text-white mb-3" style="font-size: 26px; font-weight: 600;">
          Ready to Submit Your Entry?
        </h2>
        <!-- Zigzag Decoration -->
        <div class="mb-6">
          <svg width="95" height="12" viewBox="0 0 95 12" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 6L8 0L16 6L24 0L32 6L40 0L48 6L56 0L64 6L72 0L80 6L88 0L95 6" stroke="#FF7733" stroke-width="2" stroke-linejoin="miter"/>
          </svg>
        </div>
        <p class="text-gray-300 text-base md:text-lg max-w-xl">
          Register interest for all events updates, including the announcement of the winners.
        </p>
      </div>

      <!-- Right Form -->
      <div class="flex-1 w-full lg:max-w-md">
        <form id="register-interest-form" class="flex flex-col sm:flex-row gap-3">
          <input
            type="email"
            name="email"
            id="email"
            placeholder="Email"
            class="flex-1 px-4 py-3 rounded-md bg-transparent border border-white/20 text-white placeholder-gray-400 focus:outline-hidden focus:border-white/40 transition-colors"
            pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
            title="Please enter a valid email address"
            required
          />
          <button
            type="submit"
            id="submit-btn"
            class="px-6 py-3 bg-[#4923EB] text-white font-semibold rounded-md hover:bg-[#3a1bbd] transition-colors whitespace-nowrap disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="submit-text">Stay up to date</span>
            <span id="loading-text" class="hidden">Submitting...</span>
          </button>
        </form>
        
        <!-- Success/Error Messages -->
        <div id="form-message" class="hidden text-sm font-medium mt-3"></div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('register-interest-form') as HTMLFormElement;
    if (!form) return; // Exit if form doesn't exist on this page
    
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const submitText = document.getElementById('submit-text');
    const loadingText = document.getElementById('loading-text');
    const formMessage = document.getElementById('form-message');
    const emailInput = document.getElementById('email') as HTMLInputElement;

    if (!submitBtn || !submitText || !loadingText || !formMessage || !emailInput) {
      console.error('Required form elements not found');
      return;
    }

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Get form data
      const formData = new FormData(form);
      const email = formData.get('email')?.toString().trim();

      // Let browser handle all validation - no JavaScript validation needed

      // Show loading state
      submitBtn.disabled = true;
      submitText.classList.add('hidden');
      loadingText.classList.remove('hidden');
      formMessage.classList.add('hidden');

      try {
        const response = await fetch(`${import.meta.env.PUBLIC_SUPABASE_URL}/functions/v1/brevo-forms`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${import.meta.env.PUBLIC_SUPABASE_ANON_KEY}`
          },
          body: JSON.stringify({
            type: 'register_interest',
            email: email
          })
        });

        const result = await response.json();

        if (result.success) {
          // Show success message
          formMessage.textContent = 'Thank you! You\'ve been added to our updates list.';
          formMessage.className = 'text-green-400 text-sm font-medium';
          formMessage.classList.remove('hidden');
          
          // Reset form
          form.reset();
        } else {
          // Show error message
          formMessage.textContent = result.error || 'Something went wrong. Please try again.';
          formMessage.className = 'text-red-400 text-sm font-medium';
          formMessage.classList.remove('hidden');
        }
      } catch (error) {
        console.error('Form submission error:', error);
        formMessage.textContent = 'Something went wrong. Please try again.';
        formMessage.className = 'text-red-400 text-sm font-medium';
        formMessage.classList.remove('hidden');
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        submitText.classList.remove('hidden');
        loadingText.classList.add('hidden');
      }
    });
  });
</script>
