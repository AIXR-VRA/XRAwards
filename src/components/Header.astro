---
// Header component with navigation - transparent until scroll
const navigation = [
  { name: 'Events', href: '/events' },
  { name: 'Categories', href: '/categories' },
  { name: 'Winners', href: '/winners' },
  { name: 'Judges', href: '/judges' },
];

const moreItems = [
  { name: 'Archive', href: '/archive' },
  { name: 'About', href: '/about' },
  { name: 'Sponsors', href: '/sponsors' },
  { name: 'Contact', href: '/contact' },
];
---

<header class="fixed top-0 left-0 right-0 z-50">
  <nav class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 pt-4">
    <div id="nav-container" class="flex items-center justify-between h-16 px-6 rounded-2xl border border-white/20 transition-all duration-300">
      <!-- Logo -->
      <div class="shrink-0">
        <a href="/" class="flex items-center">
          <img
            id="header-logo"
            src="/XRA-Logo.svg"
            alt="XR Awards"
            class="h-8 w-auto"
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navigation.map((item) => (
          <a
            href={item.href}
            class="nav-link text-white hover:text-primary transition-colors text-sm font-medium py-2"
          >
            {item.name}
          </a>
        ))}
        
        <!-- More Dropdown -->
        <div class="relative group">
          <button class="nav-link flex items-center text-white hover:text-primary transition-colors text-sm font-medium py-2">
            More
            <svg class="ml-1 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          
          <!-- Dropdown Menu -->
          <div class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-xl border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
            <div class="py-2">
              {moreItems.map((item) => (
                <a
                  href={item.href}
                  class="dropdown-link block px-4 py-2 text-sm text-dark hover:bg-gray-50 transition-colors"
                >
                  {item.name}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>

      <!-- CTA Button -->
      <div class="hidden md:block">
        <a
          href="https://app.aixr.org/e/20a6e09d-7e86-488d-8436-1cd162d0f5df"
          class="inline-flex items-center px-4 py-2 bg-primary text-white text-sm font-medium rounded-lg hover:bg-primary-dark transition-colors"
        >
          Nominate Now
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          id="mobile-menu-button"
          class="nav-link inline-flex items-center justify-center p-2 rounded-md text-white hover:text-primary transition-colors"
          aria-expanded="false"
          aria-label="Toggle navigation menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden md:hidden mt-2 rounded-3xl border border-gray-200 bg-white overflow-hidden">
      <div class="space-y-1 p-4">
        {navigation.map((item) => (
          <a
            href={item.href}
            class="dropdown-link block px-3 py-2 rounded-md text-base font-medium text-dark hover:bg-gray-50 transition-colors"
          >
            {item.name}
          </a>
        ))}
        {moreItems.map((item) => (
          <a
            href={item.href}
            class="dropdown-link block px-3 py-2 rounded-md text-base font-medium text-dark hover:bg-gray-50 transition-colors"
          >
            {item.name}
          </a>
        ))}
        <a
          href="https://app.aixr.org/e/20a6e09d-7e86-488d-8436-1cd162d0f5df"
          class="block px-3 py-2 rounded-md text-base font-medium text-white bg-primary hover:bg-primary-dark transition-colors text-center mt-4"
        >
          Nominate Now
        </a>
      </div>
    </div>
  </nav>
</header>

<script is:inline>
  (() => {
    let cleanup = null;

    const initHeader = () => {
      // Clean up previous listeners
      if (cleanup) cleanup();

      const navContainer = document.getElementById('nav-container');
      const logo = document.getElementById('header-logo');
      const navLinks = document.querySelectorAll('.nav-link');
      const button = document.getElementById('mobile-menu-button');
      const menu = document.getElementById('mobile-menu');
      let isMenuOpen = false;

      // Handle scroll for transparent header, logo swap, and text color
      const handleScroll = () => {
        // Always show background if mobile menu is open
        if (isMenuOpen) {
          navContainer?.classList.add('bg-white', 'shadow-sm', 'border-gray-200');
          navContainer?.classList.remove('border-white/20');
          if (logo) logo.src = '/XRA-dark-Logo.svg';
          navLinks.forEach(link => {
            link.classList.remove('text-white');
            link.classList.add('text-dark');
          });
          return;
        }

        if (window.scrollY > 20) {
          navContainer?.classList.add('bg-white', 'shadow-sm', 'border-gray-200');
          navContainer?.classList.remove('border-white/20');
          if (logo) logo.src = '/XRA-dark-Logo.svg';
          navLinks.forEach(link => {
            link.classList.remove('text-white');
            link.classList.add('text-dark');
          });
        } else {
          navContainer?.classList.remove('bg-white', 'shadow-sm', 'border-gray-200');
          navContainer?.classList.add('border-white/20');
          if (logo) logo.src = '/XRA-Logo.svg';
          navLinks.forEach(link => {
            link.classList.remove('text-dark');
            link.classList.add('text-white');
          });
        }
      };

      // Mobile menu toggle handler
      const handleMenuClick = () => {
        const expanded = button.getAttribute('aria-expanded') === 'true';
        button.setAttribute('aria-expanded', (!expanded).toString());
        menu?.classList.toggle('hidden');
        isMenuOpen = !isMenuOpen;
        handleScroll(); // Update styling when menu toggles
      };

      // Initial check
      handleScroll();

      // Add event listeners
      window.addEventListener('scroll', handleScroll, { passive: true });
      button?.addEventListener('click', handleMenuClick);

      // Store cleanup function
      cleanup = () => {
        window.removeEventListener('scroll', handleScroll);
        button?.removeEventListener('click', handleMenuClick);
      };
    };

    // Initialize on page load (both initial and after view transitions)
    document.addEventListener('astro:page-load', initHeader);
  })();
</script>
