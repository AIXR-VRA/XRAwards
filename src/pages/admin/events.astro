---
/**
 * Admin Event Details Management Page
 */
import AdminLayout from '../../components/admin/AdminLayout.astro';
import Modal from '../../components/admin/Modal.astro';
import MediaSelector from '../../components/admin/MediaSelector.astro';
import { createServerClient } from '@supabase/ssr';

// Check authentication
const supabase = createServerClient(
  import.meta.env.SUPABASE_URL,
  import.meta.env.SUPABASE_ANON_KEY,
  {
    cookies: {
      get(key: string) {
        return Astro.cookies.get(key)?.value;
      },
      set(key: string, value: string, options: any) {
        Astro.cookies.set(key, value, options);
      },
      remove(key: string, options: any) {
        Astro.cookies.delete(key, options);
      },
    },
  }
);

const { data: { session } } = await supabase.auth.getSession();

// Redirect if not authenticated
if (!session) {
  return Astro.redirect('/admin/login');
}
---

<AdminLayout title="Event Details" activePage="events" session={session}>
  <div class="space-y-8">
    <!-- Header -->
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Event Details</h1>
        <p class="mt-2 text-gray-600">Manage event information and key dates</p>
      </div>
      <button
        id="addEventBtn"
        class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
      >
        + Add Event
      </button>
    </div>

    <!-- Events List -->
    <div id="eventsList" class="grid grid-cols-1 gap-6">
      <!-- Loading state -->
      <div class="col-span-full text-center py-12">
        <p class="text-gray-500">Loading events...</p>
      </div>
    </div>

    <!-- Add/Edit Modal -->
    <Modal id="eventModal" title="Add Event">
      <form id="eventModalForm" class="space-y-6 max-w-full">
          <input type="hidden" id="eventId" name="id" />

          <!-- Basic Info Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Basic Information</h3>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div class="min-w-0">
                <label for="event_name" class="block text-sm font-medium text-gray-700 mb-1">
                  Event Name *
                </label>
                <input
                  type="text"
                  id="event_name"
                  name="event_name"
                  required
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="e.g., United XR Awards 2025"
                />
              </div>

              <div class="min-w-0">
                <label for="event_year" class="block text-sm font-medium text-gray-700 mb-1">
                  Event Year *
                </label>
                <input
                  type="number"
                  id="event_year"
                  name="event_year"
                  required
                  min="2020"
                  max="2100"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="2025"
                />
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div class="min-w-0">
                <label for="location" class="block text-sm font-medium text-gray-700 mb-1">
                  Location *
                </label>
                <input
                  type="text"
                  id="location"
                  name="location"
                  required
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="e.g., Brussels, Belgium"
                />
              </div>

              <div class="min-w-0">
                <label for="organizer_name" class="block text-sm font-medium text-gray-700 mb-1">
                  Organizer Name
                </label>
                <input
                  type="text"
                  id="organizer_name"
                  name="organizer_name"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="e.g., AIXR"
                />
              </div>
            </div>

            <div>
              <label for="venue_address" class="block text-sm font-medium text-gray-700 mb-1">
                Venue Address
              </label>
              <input
                type="text"
                id="venue_address"
                name="venue_address"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="e.g., Maison de la Poste, Rue Picard 5-7, 1000 Brussels, Belgium"
              />
              <p class="text-xs text-gray-500 mt-1">Full venue address including street, postal code, city, and country</p>
            </div>

            <div>
              <label for="description" class="block text-sm font-medium text-gray-700 mb-1">
                Description
              </label>
              <textarea
                id="description"
                name="description"
                rows="3"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="Brief description of the event..."
              ></textarea>
            </div>
          </div>

          <!-- Key Dates Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Key Dates</h3>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div class="min-w-0">
                <label for="nominations_open" class="block text-sm font-medium text-gray-700 mb-1">
                  Nominations Open
                </label>
                <input
                  type="date"
                  id="nominations_open"
                  name="nominations_open"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                />
              </div>

              <div class="min-w-0">
                <label for="nominations_close" class="block text-sm font-medium text-gray-700 mb-1">
                  Nominations Close
                </label>
                <input
                  type="date"
                  id="nominations_close"
                  name="nominations_close"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                />
              </div>

              <div class="min-w-0">
                <label for="finalists_announced" class="block text-sm font-medium text-gray-700 mb-1">
                  Finalists Announced
                </label>
                <input
                  type="date"
                  id="finalists_announced"
                  name="finalists_announced"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                />
              </div>

              <div class="min-w-0">
                <label for="awards_ceremony" class="block text-sm font-medium text-gray-700 mb-1">
                  Awards Ceremony
                </label>
                <input
                  type="date"
                  id="awards_ceremony"
                  name="awards_ceremony"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                />
              </div>

              <div class="min-w-0">
                <label for="judging_period_start" class="block text-sm font-medium text-gray-700 mb-1">
                  Judging Period Start
                </label>
                <input
                  type="date"
                  id="judging_period_start"
                  name="judging_period_start"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                />
              </div>

              <div class="min-w-0">
                <label for="judging_period_end" class="block text-sm font-medium text-gray-700 mb-1">
                  Judging Period End
                </label>
                <input
                  type="date"
                  id="judging_period_end"
                  name="judging_period_end"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                />
              </div>
            </div>
          </div>

          <!-- Portal Links Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Portal Links</h3>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div class="min-w-0">
                <label for="nomination_portal_url" class="block text-sm font-medium text-gray-700 mb-1">
                  Nomination Portal URL
                </label>
                <input
                  type="url"
                  id="nomination_portal_url"
                  name="nomination_portal_url"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="https://..."
                />
              </div>

              <div class="min-w-0">
                <label for="tickets_portal_url" class="block text-sm font-medium text-gray-700 mb-1">
                  Tickets Portal URL
                </label>
                <input
                  type="url"
                  id="tickets_portal_url"
                  name="tickets_portal_url"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="https://..."
                />
              </div>
            </div>
          </div>

          <!-- Hero & Video Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Hero & Video Content</h3>

            <div>
              <!-- Current Image Preview -->
              <div id="currentHeroImage" class="hidden mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg">
                <p class="text-xs font-medium text-gray-700 mb-2">Current Hero Image:</p>
                <img id="currentHeroImagePreview" src="" alt="Current hero" class="max-w-40 h-auto object-cover rounded border border-gray-300" />
              </div>
              
              <div id="heroImageSelector">
                <MediaSelector
                  label="Hero Image (select to change)"
                  helpText="Leave empty to keep current image, or select new image to replace"
                  multiple={false}
                />
              </div>
            </div>

            <div>
              <label for="highlight_video" class="block text-sm font-medium text-gray-700 mb-1">
                Highlight Video URL
              </label>
              <input
                type="url"
                id="highlight_video"
                name="highlight_video"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="https://youtube.com/... or https://vimeo.com/..."
              />
              <p class="text-xs text-gray-500 mt-1">External video URL (YouTube, Vimeo, etc.)</p>
            </div>

            <div>
              <!-- Current Video Cover Preview -->
              <div id="currentVideoCover" class="hidden mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg">
                <p class="text-xs font-medium text-gray-700 mb-2">Current Video Cover:</p>
                <img id="currentVideoCoverPreview" src="" alt="Current cover" class="max-w-40 h-auto object-cover rounded border border-gray-300" />
              </div>
              
              <div id="videoCoverSelector">
                <MediaSelector
                  label="Video Cover Image (select to change)"
                  helpText="Leave empty to keep current image, or select new image to replace"
                  multiple={false}
                />
              </div>
            </div>
          </div>

          <!-- Finalists & Winners Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Finalists & Winners</h3>

            <div>
              <label for="finalists_winners_blurb" class="block text-sm font-medium text-gray-700 mb-1">
                Finalists & Winners Blurb
              </label>
              <textarea
                id="finalists_winners_blurb"
                name="finalists_winners_blurb"
                rows="3"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="Descriptive text about finalists and winners..."
              ></textarea>
            </div>
          </div>

          <!-- Highlights Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Highlights</h3>

            <div>
              <label for="highlight_blurb_1" class="block text-sm font-medium text-gray-700 mb-1">
                Highlight Blurb 1
              </label>
              <textarea
                id="highlight_blurb_1"
                name="highlight_blurb_1"
                rows="3"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="First highlight section text..."
              ></textarea>
            </div>

            <div>
              <!-- Current Highlight Images Preview -->
              <div id="currentHighlightImages" class="hidden mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg overflow-hidden">
                <p class="text-xs font-medium text-gray-700 mb-2">Current Highlight Images (<span id="highlightImagesCount">0</span>):</p>
                <div id="currentHighlightImagesList" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2"></div>
              </div>
              
              <div id="highlightImagesSelector">
                <MediaSelector
                  label="Highlight Images (select to change)"
                  helpText="Leave empty to keep current images, or select new images to replace all"
                  multiple={true}
                />
              </div>
            </div>

            <div>
              <label for="highlight_blurb_2" class="block text-sm font-medium text-gray-700 mb-1">
                Highlight Blurb 2
              </label>
              <textarea
                id="highlight_blurb_2"
                name="highlight_blurb_2"
                rows="3"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="Second highlight section text..."
              ></textarea>
            </div>
          </div>

          <!-- Entertainment Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Entertainment</h3>

            <div>
              <label for="entertainment_blurb" class="block text-sm font-medium text-gray-700 mb-1">
                Entertainment Blurb
              </label>
              <textarea
                id="entertainment_blurb"
                name="entertainment_blurb"
                rows="3"
                class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                placeholder="Description of entertainment at the event..."
              ></textarea>
            </div>

            <div>
              <!-- Current Entertainment Images Preview -->
              <div id="currentEntertainmentImages" class="hidden mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg overflow-hidden">
                <p class="text-xs font-medium text-gray-700 mb-2">Current Entertainment Images (<span id="entertainmentImagesCount">0</span>):</p>
                <div id="currentEntertainmentImagesList" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2"></div>
              </div>
              
              <div id="entertainmentImagesSelector">
                <MediaSelector
                  label="Entertainment Images (select to change)"
                  helpText="Leave empty to keep current images, or select new images to replace all"
                  multiple={true}
                />
              </div>
            </div>
          </div>

          <!-- Menu Section -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900 border-b pb-2">Menu</h3>

            <div class="grid grid-cols-1 gap-4">
              <div>
                <label for="menu_blurb_starter" class="block text-sm font-medium text-gray-700 mb-1">
                  Starter
                </label>
                <textarea
                  id="menu_blurb_starter"
                  name="menu_blurb_starter"
                  rows="3"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="Starter/appetizer description..."
                ></textarea>
              </div>

              <div>
                <label for="menu_blurb_main" class="block text-sm font-medium text-gray-700 mb-1">
                  Main Course
                </label>
                <textarea
                  id="menu_blurb_main"
                  name="menu_blurb_main"
                  rows="3"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="Main course description..."
                ></textarea>
              </div>

              <div>
                <label for="menu_blurb_dessert" class="block text-sm font-medium text-gray-700 mb-1">
                  Dessert
                </label>
                <textarea
                  id="menu_blurb_dessert"
                  name="menu_blurb_dessert"
                  rows="3"
                  class="w-full px-2.5 py-2 border border-gray-300 rounded-lg focus:outline-hidden focus:ring-2 focus:ring-blue-500"
                  placeholder="Dessert description..."
                ></textarea>
              </div>
            </div>

            <div>
              <!-- Current Menu Images Preview -->
              <div id="currentMenuImages" class="hidden mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg overflow-hidden">
                <p class="text-xs font-medium text-gray-700 mb-2">Current Menu Images (<span id="menuImagesCount">0</span>):</p>
                <div id="currentMenuImagesList" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2"></div>
              </div>
              
              <div id="menuImagesSelector">
                <MediaSelector
                  label="Menu Images (select to change)"
                  helpText="Leave empty to keep current images, or select new images to replace all"
                  multiple={true}
                />
              </div>
            </div>
          </div>

              <!-- Active Status -->
              <div>
                <label class="flex items-center space-x-2 px-4 py-3 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                  <input
                    type="checkbox"
                    id="is_active"
                    name="is_active"
                    class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                  />
                  <div>
                    <span class="text-sm font-medium text-gray-700">Set as Active Event</span>
                    <p class="text-xs text-gray-500">Only one event can be active at a time. This will be shown on the homepage.</p>
                  </div>
                </label>
              </div>
      </form>
    </Modal>
  </div>
</AdminLayout>

<script>
  let events: any[] = [];
  let heroImageSelectorId: string = '';
  let videoCoverSelectorId: string = '';
  let highlightImagesSelectorId: string = '';
  let entertainmentImagesSelectorId: string = '';
  let menuImagesSelectorId: string = '';

  // Find all media selector IDs on page load
  window.addEventListener('DOMContentLoaded', () => {
    // Get selector IDs from the data attributes
    const heroSelector = document.querySelector('#heroImageSelector .media-selector-component');
    const videoCoverSelector = document.querySelector('#videoCoverSelector .media-selector-component');
    const highlightImagesSelector = document.querySelector('#highlightImagesSelector .media-selector-component');
    const entertainmentImagesSelector = document.querySelector('#entertainmentImagesSelector .media-selector-component');
    const menuImagesSelector = document.querySelector('#menuImagesSelector .media-selector-component');

    if (heroSelector) heroImageSelectorId = heroSelector.getAttribute('data-selector-id') || '';
    if (videoCoverSelector) videoCoverSelectorId = videoCoverSelector.getAttribute('data-selector-id') || '';
    if (highlightImagesSelector) highlightImagesSelectorId = highlightImagesSelector.getAttribute('data-selector-id') || '';
    if (entertainmentImagesSelector) entertainmentImagesSelectorId = entertainmentImagesSelector.getAttribute('data-selector-id') || '';
    if (menuImagesSelector) menuImagesSelectorId = menuImagesSelector.getAttribute('data-selector-id') || '';
  });

  // Format date for display
  function formatDate(dateStr: string | null): string {
    if (!dateStr) return 'Not set';
    const date = new Date(dateStr);
    return date.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' });
  }

  // Load events
  async function loadEvents() {
    try {
      const response = await fetch('/api/events');
      const data = await response.json();

      if (!response.ok) throw new Error(data.error);

      events = data.events || [];
      renderEvents();
    } catch (error: any) {
      const list = document.getElementById('eventsList')!;
      list.innerHTML = `
        <div class="col-span-full text-center py-12">
          <p class="text-red-600">Error loading events: ${error.message}</p>
        </div>
      `;
    }
  }

  // Helper to escape HTML for safe display
  function escapeHtml(text: string): string {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  // Render events
  function renderEvents() {
    const list = document.getElementById('eventsList')!;

    if (events.length === 0) {
      list.innerHTML = `
        <div class="col-span-full text-center py-12">
          <p class="text-gray-500">No events yet. Add your first event!</p>
        </div>
      `;
      return;
    }

    list.innerHTML = events.map(event => `
      <div class="bg-white border ${event.is_active ? 'border-blue-500 border-2' : 'border-gray-200'} rounded-lg p-6 hover:shadow-sm transition-shadow">
        <div class="flex items-start justify-between mb-4">
          <div>
            <div class="flex items-center gap-2">
              <h3 class="text-xl font-semibold text-gray-900">${escapeHtml(event.event_name)}</h3>
              ${event.is_active ? '<span class="px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded">Active</span>' : ''}
            </div>
            <p class="text-sm text-gray-600 mt-1">${escapeHtml(event.location)} | ${event.event_year}</p>
            ${event.venue_address ? `<p class="text-xs text-gray-500 mt-1"><strong>Venue:</strong> ${escapeHtml(event.venue_address)}</p>` : ''}
            ${event.organizer_name ? `<p class="text-xs text-gray-500 mt-1">Organized by ${escapeHtml(event.organizer_name)}</p>` : ''}
            <p class="text-xs text-gray-400 mt-1 font-mono">ID: ${event.id}</p>
          </div>
        </div>

        ${event.description ? `<p class="text-sm text-gray-600 mb-4">${escapeHtml(event.description)}</p>` : ''}

        <div class="grid grid-cols-2 md:grid-cols-3 gap-4 mb-4 p-4 bg-gray-50 rounded-lg">
          <div>
            <p class="text-xs text-gray-500">Nominations Open</p>
            <p class="text-sm font-medium text-gray-900">${formatDate(event.nominations_open)}</p>
          </div>
          <div>
            <p class="text-xs text-gray-500">Nominations Close</p>
            <p class="text-sm font-medium text-gray-900">${formatDate(event.nominations_close)}</p>
          </div>
          <div>
            <p class="text-xs text-gray-500">Finalists Announced</p>
            <p class="text-sm font-medium text-gray-900">${formatDate(event.finalists_announced)}</p>
          </div>
          <div>
            <p class="text-xs text-gray-500">Judging Period</p>
            <p class="text-sm font-medium text-gray-900">${formatDate(event.judging_period_start)} - ${formatDate(event.judging_period_end)}</p>
          </div>
          <div>
            <p class="text-xs text-gray-500">Awards Ceremony</p>
            <p class="text-sm font-medium text-gray-900">${formatDate(event.awards_ceremony)}</p>
          </div>
        </div>

        <div class="flex space-x-2 pt-4 border-t border-gray-100">
          <button
            onclick="editEvent('${event.id}')"
            class="flex-1 px-3 py-2 text-sm text-blue-600 hover:bg-blue-50 rounded-lg transition-colors"
          >
            Edit
          </button>
          <button
            onclick="deleteEvent('${event.id}', '${escapeHtml(event.event_name)}')"
            class="flex-1 px-3 py-2 text-sm text-red-600 hover:bg-red-50 rounded-lg transition-colors"
          >
            Delete
          </button>
        </div>
      </div>
    `).join('');
  }

  // Modal controls
  const modal = document.getElementById('eventModal')!;
  const modalTitle = document.getElementById('eventModalTitle')!;
  const form = document.getElementById('eventModalForm') as HTMLFormElement;
  const modalError = document.getElementById('eventModalError')!;

  function openModal(title: string) {
    modalTitle.textContent = title;
    modalError.classList.add('hidden');
    modal.classList.remove('hidden');
  }

  function closeModal() {
    modal.classList.add('hidden');
    form.reset();
    (document.getElementById('eventId') as HTMLInputElement).value = '';
  }

  document.getElementById('addEventBtn')!.addEventListener('click', () => {
    // Clear the editing context
    currentEditingEvent = null;
    
    // Hide all preview sections when adding new event
    document.getElementById('currentHeroImage')?.classList.add('hidden');
    document.getElementById('currentVideoCover')?.classList.add('hidden');
    document.getElementById('currentHighlightImages')?.classList.add('hidden');
    document.getElementById('currentEntertainmentImages')?.classList.add('hidden');
    document.getElementById('currentMenuImages')?.classList.add('hidden');
    
    openModal('Add Event');
  });

  document.getElementById('eventModalCloseBtn')!.addEventListener('click', closeModal);
  document.getElementById('eventModalCancelBtn')!.addEventListener('click', closeModal);

  // Function to display current media previews from already-loaded event data (zero database queries!)
  function showCurrentMediaPreviews(event: any) {
    // Single hero image
    const heroContainer = document.getElementById('currentHeroImage')!;
    if (event.hero_image) {
      (document.getElementById('currentHeroImagePreview') as HTMLImageElement).src = event.hero_image;
      heroContainer.classList.remove('hidden');
    } else {
      heroContainer.classList.add('hidden');
    }

    // Single video cover image
    const videoCoverContainer = document.getElementById('currentVideoCover')!;
    if (event.highlight_video_cover_image) {
      (document.getElementById('currentVideoCoverPreview') as HTMLImageElement).src = event.highlight_video_cover_image;
      videoCoverContainer.classList.remove('hidden');
    } else {
      videoCoverContainer.classList.add('hidden');
    }

    // Multiple highlight images
    const highlightContainer = document.getElementById('currentHighlightImages')!;
    const highlightList = document.getElementById('currentHighlightImagesList')!;
    if (event.highlight_images && event.highlight_images.length > 0) {
      document.getElementById('highlightImagesCount')!.textContent = event.highlight_images.length.toString();
      highlightList.innerHTML = event.highlight_images.map((url: string) => 
        `<img src="${escapeHtml(url)}" alt="Highlight" class="w-full aspect-square object-cover rounded border border-gray-300" />`
      ).join('');
      highlightContainer.classList.remove('hidden');
    } else {
      highlightContainer.classList.add('hidden');
    }

    // Multiple entertainment images
    const entertainmentContainer = document.getElementById('currentEntertainmentImages')!;
    const entertainmentList = document.getElementById('currentEntertainmentImagesList')!;
    if (event.entertainment_images && event.entertainment_images.length > 0) {
      document.getElementById('entertainmentImagesCount')!.textContent = event.entertainment_images.length.toString();
      entertainmentList.innerHTML = event.entertainment_images.map((url: string) => 
        `<img src="${escapeHtml(url)}" alt="Entertainment" class="w-full aspect-square object-cover rounded border border-gray-300" />`
      ).join('');
      entertainmentContainer.classList.remove('hidden');
    } else {
      entertainmentContainer.classList.add('hidden');
    }

    // Multiple menu images
    const menuContainer = document.getElementById('currentMenuImages')!;
    const menuList = document.getElementById('currentMenuImagesList')!;
    if (event.menu_images && event.menu_images.length > 0) {
      document.getElementById('menuImagesCount')!.textContent = event.menu_images.length.toString();
      menuList.innerHTML = event.menu_images.map((url: string) => 
        `<img src="${escapeHtml(url)}" alt="Menu" class="w-full aspect-square object-cover rounded border border-gray-300" />`
      ).join('');
      menuContainer.classList.remove('hidden');
    } else {
      menuContainer.classList.add('hidden');
    }
  }

  // Store current event being edited (to preserve existing URLs if media not changed)
  let currentEditingEvent: any = null;

  // Edit event
  (window as any).editEvent = (id: string) => {
    const event = events.find(e => e.id === id);
    if (!event) return;

    // Store the event we're editing
    currentEditingEvent = event;

    (document.getElementById('eventId') as HTMLInputElement).value = event.id;
    (document.getElementById('event_name') as HTMLInputElement).value = event.event_name;
    (document.getElementById('event_year') as HTMLInputElement).value = event.event_year?.toString() || '';
    (document.getElementById('location') as HTMLInputElement).value = event.location || '';
    (document.getElementById('venue_address') as HTMLInputElement).value = event.venue_address || '';
    (document.getElementById('organizer_name') as HTMLInputElement).value = event.organizer_name || '';
    (document.getElementById('description') as HTMLTextAreaElement).value = event.description || '';
    (document.getElementById('nominations_open') as HTMLInputElement).value = event.nominations_open || '';
    (document.getElementById('nominations_close') as HTMLInputElement).value = event.nominations_close || '';
    (document.getElementById('finalists_announced') as HTMLInputElement).value = event.finalists_announced || '';
    (document.getElementById('judging_period_start') as HTMLInputElement).value = event.judging_period_start || '';
    (document.getElementById('judging_period_end') as HTMLInputElement).value = event.judging_period_end || '';
    (document.getElementById('awards_ceremony') as HTMLInputElement).value = event.awards_ceremony || '';
    (document.getElementById('nomination_portal_url') as HTMLInputElement).value = event.nomination_portal_url || '';
    (document.getElementById('tickets_portal_url') as HTMLInputElement).value = event.tickets_portal_url || '';
    (document.getElementById('is_active') as HTMLInputElement).checked = event.is_active !== false;

    // Video URL field
    (document.getElementById('highlight_video') as HTMLInputElement).value = event.highlight_video || '';

    // Blurb fields
    (document.getElementById('finalists_winners_blurb') as HTMLTextAreaElement).value = event.finalists_winners_blurb || '';
    (document.getElementById('highlight_blurb_1') as HTMLTextAreaElement).value = event.highlight_blurb_1 || '';
    (document.getElementById('highlight_blurb_2') as HTMLTextAreaElement).value = event.highlight_blurb_2 || '';
    (document.getElementById('entertainment_blurb') as HTMLTextAreaElement).value = event.entertainment_blurb || '';

    // Menu blurb fields
    (document.getElementById('menu_blurb_starter') as HTMLTextAreaElement).value = event.menu_blurb_starter || '';
    (document.getElementById('menu_blurb_main') as HTMLTextAreaElement).value = event.menu_blurb_main || '';
    (document.getElementById('menu_blurb_dessert') as HTMLTextAreaElement).value = event.menu_blurb_dessert || '';

    // Clear all media selectors - user can select new media if they want to change
    if (heroImageSelectorId && (window as any)[`clearSelectedMedia_${heroImageSelectorId}`]) {
      (window as any)[`clearSelectedMedia_${heroImageSelectorId}`]();
    }
    if (videoCoverSelectorId && (window as any)[`clearSelectedMedia_${videoCoverSelectorId}`]) {
      (window as any)[`clearSelectedMedia_${videoCoverSelectorId}`]();
    }
    if (highlightImagesSelectorId && (window as any)[`clearSelectedMedia_${highlightImagesSelectorId}`]) {
      (window as any)[`clearSelectedMedia_${highlightImagesSelectorId}`]();
    }
    if (entertainmentImagesSelectorId && (window as any)[`clearSelectedMedia_${entertainmentImagesSelectorId}`]) {
      (window as any)[`clearSelectedMedia_${entertainmentImagesSelectorId}`]();
    }
    if (menuImagesSelectorId && (window as any)[`clearSelectedMedia_${menuImagesSelectorId}`]) {
      (window as any)[`clearSelectedMedia_${menuImagesSelectorId}`]();
    }

    // Show current media previews (images load from R2, zero database queries!)
    showCurrentMediaPreviews(event);

    openModal('Edit Event');
  };

  // Delete event
  (window as any).deleteEvent = async (id: string, name: string) => {
    if (!confirm(`Are you sure you want to delete "${name}"?`)) return;

    try {
      const response = await fetch('/api/events', {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id }),
      });

      const data = await response.json();
      if (!response.ok) throw new Error(data.error);

      await loadEvents();
    } catch (error: any) {
      alert('Error deleting event: ' + error.message);
    }
  };

  // Form submit
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    modalError.classList.add('hidden');

    const formData = new FormData(form);
    const id = formData.get('id') as string;

    // Get selected media from MediaSelector components
    const getSelectedMedia = (selectorId: string) => {
      return selectorId && (window as any)[`getSelectedMedia_${selectorId}`]
        ? (window as any)[`getSelectedMedia_${selectorId}`]()
        : [];
    };

    const heroMedia = getSelectedMedia(heroImageSelectorId);
    const videoCoverMedia = getSelectedMedia(videoCoverSelectorId);
    const highlightMedia = getSelectedMedia(highlightImagesSelectorId);
    const entertainmentMedia = getSelectedMedia(entertainmentImagesSelectorId);
    const menuMedia = getSelectedMedia(menuImagesSelectorId);

    const data = {
      id: id || undefined,
      event_name: formData.get('event_name'),
      event_year: parseInt(formData.get('event_year') as string),
      location: formData.get('location'),
      venue_address: formData.get('venue_address') || null,
      organizer_name: formData.get('organizer_name') || null,
      description: formData.get('description') || null,
      nominations_open: formData.get('nominations_open') || null,
      nominations_close: formData.get('nominations_close') || null,
      finalists_announced: formData.get('finalists_announced') || null,
      judging_period_start: formData.get('judging_period_start') || null,
      judging_period_end: formData.get('judging_period_end') || null,
      awards_ceremony: formData.get('awards_ceremony') || null,
      nomination_portal_url: formData.get('nomination_portal_url') || null,
      tickets_portal_url: formData.get('tickets_portal_url') || null,
      is_active: (document.getElementById('is_active') as HTMLInputElement).checked,

      // Hero & Video fields - use new selection if provided, otherwise preserve existing
      hero_image: heroMedia.length > 0 ? heroMedia[0].file_url : (currentEditingEvent?.hero_image || null),
      highlight_video: formData.get('highlight_video') || null,
      highlight_video_cover_image: videoCoverMedia.length > 0 ? videoCoverMedia[0].file_url : (currentEditingEvent?.highlight_video_cover_image || null),

      // Blurb fields
      finalists_winners_blurb: formData.get('finalists_winners_blurb') || null,
      highlight_blurb_1: formData.get('highlight_blurb_1') || null,
      highlight_blurb_2: formData.get('highlight_blurb_2') || null,
      entertainment_blurb: formData.get('entertainment_blurb') || null,

      // Menu blurb fields
      menu_blurb_starter: formData.get('menu_blurb_starter') || null,
      menu_blurb_main: formData.get('menu_blurb_main') || null,
      menu_blurb_dessert: formData.get('menu_blurb_dessert') || null,

      // Array fields - use new selections if provided, otherwise preserve existing
      highlight_images: highlightMedia.length > 0 ? highlightMedia.map((m: any) => m.file_url) : (currentEditingEvent?.highlight_images || []),
      entertainment_images: entertainmentMedia.length > 0 ? entertainmentMedia.map((m: any) => m.file_url) : (currentEditingEvent?.entertainment_images || []),
      menu_images: menuMedia.length > 0 ? menuMedia.map((m: any) => m.file_url) : (currentEditingEvent?.menu_images || []),
    };

    try {
      const response = await fetch('/api/events', {
        method: id ? 'PUT' : 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });

      const result = await response.json();
      if (!response.ok) throw new Error(result.error);

      closeModal();
      await loadEvents();
    } catch (error: any) {
      modalError.textContent = error.message;
      modalError.classList.remove('hidden');
    }
  });

  // Initial load
  loadEvents();
</script>
