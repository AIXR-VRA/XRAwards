---
/**
 * Finalist Share Tool
 * URL: /finalist-share
 * Tool for generating shareable finalist images with overlay frame
 */
export const prerender = true;

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import CTAFooter from '../components/CTAFooter.astro';
import { Image } from 'astro:assets';
import { getR2ImageUrl } from '../utils/r2';
import { supabase } from '../utils/supabase';
import { getEventPhase } from '../utils/date-checker';

// Fetch active event details
const { data: eventDetails } = await supabase
  .from('event_details')
  .select('*')
  .eq('is_active', true)
  .single();

// Get current event phase
const eventPhase = await getEventPhase();

// Get finalists for the active event
const { data: finalists } = await supabase
  .from('finalists')
  .select(`
    id,
    title,
    organization,
    image_url,
    description,
    category_id,
    categories!category_id (
      name,
      slug
    )
  `)
  .eq('event_id', eventDetails?.id)
  .order('title', { ascending: true });

// Get the overlay frame image
const overlayFrame = getR2ImageUrl('/images/2025/10/xr_awards_gala_2025_finalist_frame_2024_1760450572001.png');
---

<Layout
  title="Finalist Share Tool - AIXR XR Awards"
  description="Create shareable images for XR Awards finalists with custom overlay frames."
>
  <Header />

  <main class="min-h-screen bg-white">
    <!-- Page Header -->
    <section class="relative bg-[#0E1022] pt-32 md:pt-40 pb-20 md:pb-32 overflow-hidden">
      <!-- Decorative Background Rings -->
      <div class="absolute -left-20 md:left-0 top-1/4 -translate-y-1/2 -translate-x-1/2 w-[300px] h-[300px] md:w-[450px] md:h-[450px]">
        <div class="absolute inset-0 rounded-full" style="background: linear-gradient(180deg, #E91E8C 0%, #5D1635 100%);"></div>
        <div class="absolute top-[55px] left-[55px] right-[55px] bottom-[55px] md:top-[75px] md:left-[75px] md:right-[75px] md:bottom-[75px] rounded-full bg-[#0E1022]"></div>
      </div>
      <div class="absolute -right-20 md:right-0 top-3/4 -translate-y-1/2 translate-x-1/2 w-[300px] h-[300px] md:w-[450px] md:h-[450px]">
        <div class="absolute inset-0 rounded-full" style="background: linear-gradient(180deg, #00D4D8 0%, #0A4B52 100%);"></div>
        <div class="absolute top-[55px] left-[55px] right-[55px] bottom-[55px] md:top-[75px] md:left-[75px] md:right-[75px] md:bottom-[75px] rounded-full bg-[#0E1022]"></div>
      </div>

      <!-- Content -->
      <div class="relative z-10 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="page-title text-white mb-6">
          Finalist Share Tool
        </h1>

        <!-- Decorative Dots -->
        <div class="flex justify-center gap-2 mb-6">
          <span class="w-1.5 h-1.5 rounded-full bg-cyan-400"></span>
          <span class="w-1.5 h-1.5 rounded-full bg-cyan-400"></span>
          <span class="w-1.5 h-1.5 rounded-full bg-cyan-400"></span>
          <span class="w-1.5 h-1.5 rounded-full bg-cyan-400"></span>
          <span class="w-1.5 h-1.5 rounded-full bg-cyan-400"></span>
        </div>

        <p class="page-subtitle text-white">
          Create shareable images for {eventDetails?.event_year || '2025'} XR Awards finalists
        </p>
      </div>
    </section>

    <!-- Main Tool Section -->
    <section class="py-16 md:py-24 bg-white">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
          <!-- Left: Selection Panel -->
          <div class="space-y-6">
            <!-- Search Input -->
            <div>
              <label for="finalist-search" class="block text-sm font-medium text-gray-700 mb-2">
                Search Finalists
              </label>
              <div class="relative">
                <input 
                  type="text" 
                  id="finalist-search" 
                  placeholder="Type to search finalists..."
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#4923EB] focus:border-transparent"
                  autocomplete="off"
                />
                <svg class="absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
            </div>

            <!-- Finalists List -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">
                Finalists ({finalists?.length || 0} total)
              </label>
              <div id="finalists-list" class="border border-gray-300 rounded-lg max-h-80 overflow-y-auto">
                <!-- Finalists will be populated here -->
              </div>
            </div>

            <!-- Selected Finalist Info -->
            <div id="selected-finalist-info" class="bg-gray-50 rounded-lg p-4 hidden">
              <h3 class="font-semibold text-gray-900 mb-2">Selected Finalist</h3>
              <div id="finalist-info-content">
                <!-- Content will be populated here -->
              </div>
            </div>

          </div>

          <!-- Right: Preview Panel -->
          <div class="space-y-6">
            <h3 class="text-xl font-semibold text-gray-900">Preview</h3>
            
            <!-- Image Preview -->
            <div class="relative bg-white rounded-2xl shadow-lg overflow-hidden">
              <div id="finalist-preview" class="relative aspect-square bg-gray-100">
                <!-- Placeholder when no finalist selected -->
                <div id="preview-placeholder" class="absolute inset-0 flex items-center justify-center">
                  <div class="text-center">
                    <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    <p class="text-gray-500">Select a finalist to see preview</p>
                  </div>
                </div>
                
                <!-- Finalist image container -->
                <div id="finalist-image-container" class="absolute inset-0 hidden">
                  <!-- Finalist image will be loaded here -->
                </div>
                
              </div>
            </div>
            
            <!-- Download Button -->
            <button 
              id="download-btn"
              class="w-full px-6 py-3 bg-[#4923EB] text-white font-medium rounded-lg hover:bg-[#3a1bb8] transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
              disabled
            >
              Download Image
            </button>

            <!-- Social Media Copy -->
            <div id="social-copy" class="hidden">
              <h4 class="text-lg font-semibold text-gray-900 mb-3">Social Media Copy</h4>
              <div class="space-y-3">
                <!-- Twitter/X Copy -->
                <div>
                  <div class="flex items-center justify-between mb-1">
                    <label class="block text-sm font-medium text-gray-700">Twitter/X</label>
                    <button 
                      id="share-twitter" 
                      class="flex items-center gap-1 px-2 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
                      title="Share on Twitter/X"
                    >
                      <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                      </svg>
                      Share
                    </button>
                  </div>
                  <div class="relative">
                    <textarea 
                      id="twitter-copy" 
                      readonly 
                      class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm resize-none"
                      rows="3"
                    ></textarea>
                    <button 
                      id="copy-twitter" 
                      class="absolute top-2 right-2 p-1 text-gray-500 hover:text-gray-700 transition-colors"
                      title="Copy to clipboard"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                    </button>
                  </div>
                </div>

                <!-- LinkedIn Copy -->
                <div>
                  <div class="flex items-center justify-between mb-1">
                    <label class="block text-sm font-medium text-gray-700">LinkedIn</label>
                    <button 
                      id="share-linkedin" 
                      class="flex items-center gap-1 px-2 py-1 text-xs bg-blue-700 text-white rounded hover:bg-blue-800 transition-colors"
                      title="Share on LinkedIn"
                    >
                      <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                      </svg>
                      Share
                    </button>
                  </div>
                  <div class="relative">
                    <textarea 
                      id="linkedin-copy" 
                      readonly 
                      class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm resize-none"
                      rows="3"
                    ></textarea>
                    <button 
                      id="copy-linkedin" 
                      class="absolute top-2 right-2 p-1 text-gray-500 hover:text-gray-700 transition-colors"
                      title="Copy to clipboard"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                    </button>
                  </div>
                </div>

                <!-- Instagram Copy -->
                <div>
                  <div class="flex items-center justify-between mb-1">
                    <label class="block text-sm font-medium text-gray-700">Instagram</label>
                    <button 
                      id="share-instagram" 
                      class="flex items-center gap-1 px-2 py-1 text-xs bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded hover:from-purple-600 hover:to-pink-600 transition-colors"
                      title="Share on Instagram"
                    >
                      <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                      </svg>
                      Share
                    </button>
                  </div>
                  <div class="relative">
                    <textarea 
                      id="instagram-copy" 
                      readonly 
                      class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm resize-none"
                      rows="3"
                    ></textarea>
                    <button 
                      id="copy-instagram" 
                      class="absolute top-2 right-2 p-1 text-gray-500 hover:text-gray-700 transition-colors"
                      title="Copy to clipboard"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>

          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <CTAFooter />
  </main>

  <Footer />
</Layout>

<script define:vars={{ finalists, overlayFrame }}>
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('finalist-search');
    const finalistsList = document.getElementById('finalists-list');
    const selectedFinalistInfo = document.getElementById('selected-finalist-info');
    const finalistInfoContent = document.getElementById('finalist-info-content');
    const previewPlaceholder = document.getElementById('preview-placeholder');
    const finalistImageContainer = document.getElementById('finalist-image-container');
    const downloadBtn = document.getElementById('download-btn');
    const socialCopy = document.getElementById('social-copy');
    const twitterCopy = document.getElementById('twitter-copy');
    const linkedinCopy = document.getElementById('linkedin-copy');
    const instagramCopy = document.getElementById('instagram-copy');

    let selectedFinalist = null;
    let allFinalists = [];
    let filteredFinalists = [];

    // Initialize finalists data
    function initializeFinalists() {
      allFinalists = finalists?.map((finalist) => ({
        id: finalist.id,
        title: finalist.title || 'Untitled',
        organization: finalist.organization || '',
        image: finalist.image_url ? `/api/proxy-image?url=${encodeURIComponent(finalist.image_url)}` : '',
        description: finalist.description || '',
        category: finalist.categories ? finalist.categories.name : ''
      })) || [];
    }

    // Search functionality - filter the list
    searchInput?.addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      filterFinalists(searchTerm);
    });

    // Filter finalists based on search term
    function filterFinalists(searchTerm) {
      if (searchTerm.length === 0) {
        filteredFinalists = [...allFinalists];
      } else {
        filteredFinalists = allFinalists.filter(finalist => {
          const title = finalist.title?.toLowerCase() || '';
          const organization = finalist.organization?.toLowerCase() || '';
          const category = finalist.category?.toLowerCase() || '';
          
          return title.includes(searchTerm) || 
                 organization.includes(searchTerm) || 
                 category.includes(searchTerm);
        });
      }
      renderFinalistsList();
    }

    // Render the finalists list
    function renderFinalistsList() {
      if (!finalistsList) return;
      
      if (filteredFinalists.length === 0) {
        finalistsList.innerHTML = '<div class="px-4 py-8 text-center text-gray-500">No finalists found</div>';
      } else {
        finalistsList.innerHTML = filteredFinalists.map((finalist) => `
          <div 
            class="finalist-item px-4 py-3 hover:bg-gray-50 cursor-pointer border-b border-gray-100 last:border-b-0 transition-colors"
            data-finalist-id="${finalist.id}"
            data-finalist-title="${finalist.title || ''}"
            data-finalist-organization="${finalist.organization || ''}"
            data-finalist-image="${finalist.image || ''}"
            data-finalist-description="${finalist.description || ''}"
            data-finalist-category="${finalist.category || ''}"
          >
            <div class="flex items-start justify-between">
              <div class="flex-1 min-w-0">
                <div class="font-medium text-gray-900 truncate">${finalist.title || 'Untitled'}</div>
                ${finalist.organization ? `<div class="text-sm text-[#4923EB] truncate">${finalist.organization}</div>` : ''}
                ${finalist.category ? `<div class="text-xs text-gray-500 uppercase mt-1">${finalist.category}</div>` : ''}
              </div>
              <div class="ml-3 flex-shrink-0">
                <div class="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        `).join('');
      }
    }

    // Handle click on finalist items
    finalistsList?.addEventListener('click', (e) => {
      const item = e.target.closest('.finalist-item');
      if (item) {
        selectFinalist(item);
      }
    });

    // Select a finalist
    function selectFinalist(element) {
      selectedFinalist = {
        id: element.getAttribute('data-finalist-id'),
        title: element.getAttribute('data-finalist-title'),
        organization: element.getAttribute('data-finalist-organization'),
        image: element.getAttribute('data-finalist-image'),
        description: element.getAttribute('data-finalist-description'),
        category: element.getAttribute('data-finalist-category')
      };

      // Update search input
      searchInput.value = selectedFinalist.title || '';
      
      updatePreview();
      updateSelectedInfo();
      updateSocialCopy();
      enableDownload();
    }

    function resetSelection() {
      // Clean up any existing blob URL
      if (finalistImageContainer.currentBlobUrl) {
        URL.revokeObjectURL(finalistImageContainer.currentBlobUrl);
        finalistImageContainer.currentBlobUrl = null;
      }
      
      selectedFinalist = null;
      showPlaceholder();
      hideSelectedInfo();
      hideSocialCopy();
      disableDownload();
    }

    function updatePreview() {
      if (!selectedFinalist) {
        showPlaceholder();
        return;
      }

      hidePlaceholder();
      showImageContainer();

      if (selectedFinalist.image) {
        // Create a canvas to combine the images
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        if (!ctx) {
          showPlaceholder();
          return;
        }

        // Set canvas size
        const size = 800;
        canvas.width = size;
        canvas.height = size;

        // Load the finalist image
        const finalistImg = new Image();
        finalistImg.crossOrigin = 'anonymous';
        
        finalistImg.onload = () => {
          // Draw the finalist image
          ctx.drawImage(finalistImg, 0, 0, size, size);
          
          // Load and draw the overlay frame
          const overlayImg = new Image();
          overlayImg.crossOrigin = 'anonymous';
          
          overlayImg.onload = () => {
            // Draw the overlay frame
            ctx.drawImage(overlayImg, 0, 0, size, size);
            
            // Convert canvas to image and display
            canvas.toBlob((blob) => {
              if (!blob) return;
              
              const url = URL.createObjectURL(blob);
              const img = document.createElement('img');
              img.src = url;
              img.alt = `${selectedFinalist.title} - Finalist Share Image`;
              img.className = 'w-full h-full object-cover';
              img.style.cursor = 'pointer';
              img.title = 'Right-click to download';
              
              // Add right-click handler for proper filename
              img.addEventListener('contextmenu', (e) => {
                e.preventDefault();
                const a = document.createElement('a');
                a.href = url;
                a.download = `${selectedFinalist.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_finalist_share.png`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
              });
              
              finalistImageContainer.innerHTML = '';
              finalistImageContainer.appendChild(img);
              
              // Store the blob URL for cleanup later
              if (finalistImageContainer.currentBlobUrl) {
                URL.revokeObjectURL(finalistImageContainer.currentBlobUrl);
              }
              finalistImageContainer.currentBlobUrl = url;
            }, 'image/png');
          };
          
          // Use proxy for overlay frame
          const overlayProxyUrl = `/api/proxy-image?url=${encodeURIComponent(overlayFrame)}`;
          overlayImg.src = overlayProxyUrl;
        };
        
        finalistImg.src = selectedFinalist.image || '';
      } else {
        showPlaceholder();
      }
    }

    function updateSelectedInfo() {
      if (!selectedFinalist) return;

      finalistInfoContent.innerHTML = `
        <div class="space-y-2">
          <h4 class="font-semibold text-gray-900">${selectedFinalist.title || 'Untitled'}</h4>
          ${selectedFinalist.organization ? `<p class="text-sm text-[#4923EB]">${selectedFinalist.organization}</p>` : ''}
          ${selectedFinalist.category ? `<p class="text-xs text-gray-500 uppercase">${selectedFinalist.category}</p>` : ''}
          ${selectedFinalist.description ? `<p class="text-sm text-gray-600 mt-2">${selectedFinalist.description}</p>` : ''}
        </div>
      `;
      selectedFinalistInfo?.classList.remove('hidden');
    }

    function showPlaceholder() {
      previewPlaceholder?.classList.remove('hidden');
      finalistImageContainer?.classList.add('hidden');
    }

    function hidePlaceholder() {
      previewPlaceholder?.classList.add('hidden');
    }

    function showImageContainer() {
      finalistImageContainer?.classList.remove('hidden');
    }

    // Overlay frame is now part of the combined image

    function showSelectedInfo() {
      selectedFinalistInfo?.classList.remove('hidden');
    }

    function hideSelectedInfo() {
      selectedFinalistInfo?.classList.add('hidden');
    }

    function updateSocialCopy() {
      if (!selectedFinalist) return;

      // Fixed variables
      const eventYear = '2025'; // You can make this dynamic from eventDetails
      const hashtag = `#XRAwards${eventYear.slice(-2)}`;
      const handle = '@XRAwards';
      const winnersPageUrl = `https://xrawards.aixr.org/winners-and-finalists-${eventYear}`;
      const finalistName = selectedFinalist.title;
      const category = selectedFinalist.category;
      
      // Random message templates
      const twitterTemplates = [
        `🎉 Excited to be a finalist in the ${category} category at the ${eventYear} XR Awards! ${hashtag} ${handle}\n\nSee all finalists: ${winnersPageUrl}`,
        `🏆 Honored to be selected as a finalist for ${finalistName} in the ${category} category at the ${eventYear} XR Awards! ${hashtag} ${handle}\n\nView all finalists: ${winnersPageUrl}`,
        `✨ Amazing news! ${finalistName} is a finalist in the ${category} category for the ${eventYear} XR Awards! ${hashtag} ${handle}\n\nCheck out all finalists: ${winnersPageUrl}`,
        `🚀 Proud to announce that ${finalistName} has been selected as a finalist in the ${category} category at the ${eventYear} XR Awards! ${hashtag} ${handle}\n\nSee all finalists: ${winnersPageUrl}`,
        `🎊 We're thrilled that ${finalistName} is a finalist in the ${category} category for the ${eventYear} XR Awards! ${hashtag} ${handle}\n\nView all finalists: ${winnersPageUrl}`
      ];
      
      const linkedinTemplates = [
        `Thrilled to announce that ${finalistName} has been selected as a finalist in the ${category} category for the ${eventYear} XR Awards! 🏆\n\nThis recognition means a lot to our team and we're excited to be part of the XR community.\n\nView all finalists and winners: ${winnersPageUrl}\n\n${hashtag} ${handle}`,
        `We're incredibly proud to share that ${finalistName} has been chosen as a finalist in the ${category} category for the ${eventYear} XR Awards! 🎉\n\nThis achievement reflects our commitment to innovation in the XR space.\n\nSee all finalists: ${winnersPageUrl}\n\n${hashtag} ${handle}`,
        `Exciting news! ${finalistName} has been selected as a finalist in the ${category} category for the ${eventYear} XR Awards! 🏆\n\nWe're honored to be recognized alongside such incredible talent in the XR industry.\n\nView all finalists and winners: ${winnersPageUrl}\n\n${hashtag} ${handle}`,
        `We're delighted to announce that ${finalistName} is a finalist in the ${category} category for the ${eventYear} XR Awards! ✨\n\nThis recognition validates our team's hard work and dedication to pushing the boundaries of XR technology.\n\nCheck out all finalists: ${winnersPageUrl}\n\n${hashtag} ${handle}`,
        `Amazing news! ${finalistName} has been chosen as a finalist in the ${category} category for the ${eventYear} XR Awards! 🚀\n\nWe're grateful for this recognition and excited to be part of the XR community's continued growth.\n\nView all finalists: ${winnersPageUrl}\n\n${hashtag} ${handle}`
      ];
      
      const instagramTemplates = [
        `🎉 FINALIST ANNOUNCEMENT! 🎉\n\nWe're beyond excited to share that ${finalistName} has been selected as a finalist in the ${category} category for the ${eventYear} XR Awards! 🏆\n\nThis is such an honor and we can't wait to celebrate with the amazing XR community! ✨\n\nCheck out all the incredible finalists: ${winnersPageUrl}\n\n${hashtag} ${handle} #XR #VirtualReality #AugmentedReality #Innovation`,
        `🏆 WE DID IT! 🏆\n\n${finalistName} is officially a finalist in the ${category} category for the ${eventYear} XR Awards! 🎊\n\nWe're so proud of this achievement and grateful to be part of such an innovative community! 💫\n\nSee all the amazing finalists: ${winnersPageUrl}\n\n${hashtag} ${handle} #XR #VR #AR #Innovation #Technology`,
        `✨ INCREDIBLE NEWS! ✨\n\n${finalistName} has been chosen as a finalist in the ${category} category for the ${eventYear} XR Awards! 🚀\n\nThis recognition means everything to our team! Thank you to the XR community for this amazing opportunity! 🙏\n\nView all finalists: ${winnersPageUrl}\n\n${hashtag} ${handle} #XR #VirtualReality #AugmentedReality #Innovation #Awards`,
        `🎊 CELEBRATION TIME! 🎊\n\nWe're thrilled to announce that ${finalistName} is a finalist in the ${category} category for the ${eventYear} XR Awards! 🏆\n\nThis is a dream come true! We're so excited to be part of this incredible journey! ✨\n\nCheck out all finalists: ${winnersPageUrl}\n\n${hashtag} ${handle} #XR #VR #AR #Innovation #Community`,
        `🚀 AMAZING ACHIEVEMENT! 🚀\n\n${finalistName} has been selected as a finalist in the ${category} category for the ${eventYear} XR Awards! 🎉\n\nWe're over the moon with this recognition! The XR community continues to inspire us every day! 💫\n\nSee all the incredible finalists: ${winnersPageUrl}\n\n${hashtag} ${handle} #XR #VirtualReality #AugmentedReality #Innovation #Technology`
      ];
      
      // Randomly select templates
      const randomTwitter = twitterTemplates[Math.floor(Math.random() * twitterTemplates.length)];
      const randomLinkedIn = linkedinTemplates[Math.floor(Math.random() * linkedinTemplates.length)];
      const randomInstagram = instagramTemplates[Math.floor(Math.random() * instagramTemplates.length)];
      
      twitterCopy.value = randomTwitter;
      linkedinCopy.value = randomLinkedIn;
      instagramCopy.value = randomInstagram;
      
      showSocialCopy();
    }

    function showSocialCopy() {
      socialCopy?.classList.remove('hidden');
    }

    function hideSocialCopy() {
      socialCopy?.classList.add('hidden');
    }

    function enableDownload() {
      downloadBtn.disabled = false;
    }

    function disableDownload() {
      downloadBtn.disabled = true;
    }

    // Download functionality
    downloadBtn?.addEventListener('click', async () => {
      if (!selectedFinalist) return;

      try {
        // Get the current combined image from the preview
        const previewImg = finalistImageContainer.querySelector('img');
        if (!previewImg || !previewImg.src) {
          alert('Please wait for the image to load before downloading.');
          return;
        }

        // Create a link to download the current preview image
              const a = document.createElement('a');
        a.href = previewImg.src;
              a.download = `${selectedFinalist.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_finalist_share.png`;
              document.body.appendChild(a);
              a.click();
              document.body.removeChild(a);
      } catch (error) {
        console.error('Error downloading image:', error);
        alert('Error downloading image. Please try again.');
      }
    });

    // Copy button functionality
    document.getElementById('copy-twitter')?.addEventListener('click', () => {
      copyToClipboard(twitterCopy.value, 'Twitter copy');
    });

    document.getElementById('copy-linkedin')?.addEventListener('click', () => {
      copyToClipboard(linkedinCopy.value, 'LinkedIn copy');
    });

    document.getElementById('copy-instagram')?.addEventListener('click', () => {
      copyToClipboard(instagramCopy.value, 'Instagram copy');
    });

    // Share button functionality
    document.getElementById('share-twitter')?.addEventListener('click', () => {
      shareToSocial('twitter');
    });

    document.getElementById('share-linkedin')?.addEventListener('click', () => {
      shareToSocial('linkedin');
    });

    document.getElementById('share-instagram')?.addEventListener('click', () => {
      shareToSocial('instagram');
    });

    function copyToClipboard(text, label) {
      navigator.clipboard.writeText(text).then(() => {
        // Show temporary success feedback
        const button = event.target.closest('button');
        const originalHTML = button.innerHTML;
        button.innerHTML = '<svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" /></svg>';
        setTimeout(() => {
          button.innerHTML = originalHTML;
        }, 2000);
      }).catch(() => {
        alert('Failed to copy to clipboard');
      });
    }

    function shareToSocial(platform) {
      if (!selectedFinalist) return;

      const eventYear = '2025';
      const winnersPageUrl = `https://xrawards.aixr.org/winners-and-finalists-${eventYear}`;
      const finalistName = selectedFinalist.title;
      const category = selectedFinalist.category;
      
      // Get the current image URL from the preview
      const previewImg = finalistImageContainer.querySelector('img');
      const imageUrl = previewImg ? previewImg.src : '';
      
      let shareUrl = '';
      let shareText = '';
      
      switch(platform) {
        case 'twitter':
          shareText = `🎉 Excited to be a finalist in the ${category} category at the ${eventYear} XR Awards! #XRAwards25 @XRAwards`;
          shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(winnersPageUrl)}`;
          break;
          
        case 'linkedin':
          shareText = `Thrilled to announce that ${finalistName} has been selected as a finalist in the ${category} category for the ${eventYear} XR Awards! 🏆`;
          shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(winnersPageUrl)}&summary=${encodeURIComponent(shareText)}`;
          break;
          
        case 'instagram':
          // Instagram doesn't support direct URL sharing, so we'll open their web interface
          shareText = `🎉 FINALIST ANNOUNCEMENT! 🎉\n\nWe're beyond excited to share that ${finalistName} has been selected as a finalist in the ${category} category for the ${eventYear} XR Awards! 🏆\n\nThis is such an honor and we can't wait to celebrate with the amazing XR community! ✨\n\nCheck out all the incredible finalists: ${winnersPageUrl}\n\n#XRAwards25 @XRAwards #XR #VirtualReality #AugmentedReality #Innovation`;
          // For Instagram, we'll copy the text and open their web interface
          navigator.clipboard.writeText(shareText).then(() => {
            alert('Text copied to clipboard! You can now paste it in Instagram with your image.');
            window.open('https://www.instagram.com/', '_blank');
          });
          return;
      }
      
      // Open the share URL in a new tab
      if (shareUrl) {
        window.open(shareUrl, '_blank', 'width=600,height=400,scrollbars=yes,resizable=yes');
      }
    }

    // Initialize
    initializeFinalists();
    filteredFinalists = [...allFinalists];
    renderFinalistsList();
  });
</script>

<style>
  .page-title {
    font-size: 35px;
    font-weight: 600;
  }

  .page-subtitle {
    font-size: 16px;
    font-weight: 300;
    font-family: "IBM Plex Mono", monospace;
  }

  .finalist-card {
    transition: all 0.3s ease;
  }

  .finalist-card:hover {
    transform: translateY(-2px);
  }
</style>
