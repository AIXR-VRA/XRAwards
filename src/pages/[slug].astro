---
/**
 * Dynamic Ceremony Page - By Event Slug
 * URL: /xr-awards-2024, /xr-awards-2025, etc.
 * Single page showing highlights, media, and extras from a specific event
 */
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import CTAFooter from '../components/CTAFooter.astro';
import { Image } from 'astro:assets';
import { createClient } from '@supabase/supabase-js';

export const prerender = true;

// Get all event slugs for static generation
export async function getStaticPaths() {
  const { supabase } = await import('../utils/supabase');

  const { data: events } = await supabase
    .from('event_details')
    .select('slug')
    .not('slug', 'is', null)
    .order('event_year', { ascending: false });

  return (events || []).map((event) => ({
    params: { slug: event.slug },
  }));
}

const { slug } = Astro.params;

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Get the event for this slug
const { data: event } = await supabase
  .from('event_details')
  .select('*')
  .eq('slug', slug)
  .single();

if (!event) {
  return Astro.redirect('/404');
}

// We'll handle the redirect logic entirely on the client side to avoid server-side redirects
// Pass the event data to the client for processing
const eventData = {
  is_active: event.is_active,
  awards_ceremony: event.awards_ceremony,
  slug: event.slug
};

// Get sponsors for this event
const { data: sponsorEvents } = await supabase
  .from('sponsor_events')
  .select(`
    sponsors (
      id,
      name,
      logo_url,
      website_url,
      sort_order
    )
  `)
  .eq('event_id', event.id);

const sponsors = sponsorEvents
  ?.map((se: any) => se.sponsors)
  .filter((s: any) => s?.logo_url)
  .sort((a: any, b: any) => (a?.sort_order || 0) - (b?.sort_order || 0)) || [];

// Get winners for this event (limit to featured winners for ceremony section)
const { data: winners } = await supabase
  .from('finalists')
  .select('*')
  .eq('event_id', event.id)
  .eq('is_winner', true)
  .order('placement', { ascending: true });

// Split winners into featured (first 3) and other winners
const featuredWinners = winners?.slice(0, 3) || [];
const otherWinners = winners?.slice(3) || [];
---

<Layout
  title={event.event_name}
  description={event.description || `Highlights, media and extras from ${event.event_year}`}
  image="/XRA-share-image.png"
>
  <Header />

  <main class="min-h-screen bg-white">
    <!-- Client-side redirect script -->
    <script is:inline define:vars={{ eventData }}>
      // Check if ceremony has happened yet - handle redirect client-side to avoid ugly server redirect
      if (eventData.is_active && eventData.awards_ceremony) {
        const ceremonyDate = new Date(eventData.awards_ceremony);
        const oneDayAfter = new Date(ceremonyDate);
        oneDayAfter.setDate(oneDayAfter.getDate() + 1);
        const now = new Date();
        
        // If ceremony hasn't happened yet (or is within 1 day), redirect to programme
        if (now < oneDayAfter) {
          // Clean client-side redirect to avoid ugly server redirect message
          window.location.replace('/programme');
        }
      }
    </script>

    <!-- Hero Section with Background Image -->
    <section class="relative pt-32 md:pt-40 pb-20 md:pb-32 overflow-hidden">
      <div class="absolute inset-0 z-0">
        {event.hero_image ? (
          <>
            <Image
              src={event.hero_image}
              alt={event.event_name}
              width={1920}
              height={800}
              class="w-full h-full object-cover"
              format="webp"
            />
            <div class="absolute inset-0 z-10" style="background-color: rgba(0, 0, 0, 0.7);"></div>
          </>
        ) : (
          <div class="absolute inset-0 bg-[#0E1022]"></div>
        )}
      </div>

      <!-- Content -->
      <div class="relative z-20 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="hero-title text-white mb-6">
          {event.event_name}
        </h1>

        <!-- Decorative Dots Graphic -->
        <div class="flex justify-center mb-6">
          <svg width="101" height="9" viewBox="0 0 101 9" fill="none" xmlns="http://www.w3.org/2000/svg" class="opacity-80">
            <circle cx="4.5" cy="4.5" r="4.5" fill="#00D4D8"/>
            <circle cx="25.5" cy="4.5" r="4.5" fill="#00D4D8"/>
            <circle cx="46.5" cy="4.5" r="4.5" fill="#00D4D8"/>
            <circle cx="67.5" cy="4.5" r="4.5" fill="#00D4D8"/>
            <circle cx="88.5" cy="4.5" r="4.5" fill="#00D4D8"/>
          </svg>
        </div>

        <p class="hero-subtitle text-gray-200">
          Highlights, Media and Extras from {event.event_year}
        </p>
      </div>
    </section>

    <!-- Stand Out Moments Section -->
    <section class="py-16 md:py-24 bg-white">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
          <!-- Left: Text Content -->
          <div>
            <h2 class="text-2xl md:text-3xl font-bold text-gray-900 mb-6">
              {event.event_year} Stand Out Moments
            </h2>
            {event.finalists_winners_blurb && (
              <p class="text-lg text-gray-700 leading-relaxed">
                {event.finalists_winners_blurb}
              </p>
            )}
          </div>

          <!-- Right: Video Embed with Play Overlay -->
          <div class="relative aspect-video bg-gray-900 rounded-2xl overflow-hidden shadow-xl">
            {event.highlight_video ? (
              <div class="video-container relative w-full h-full" data-video-url={event.highlight_video}>
                <!-- Cover Image with Play Button (shown initially) -->
                <div class="video-cover absolute inset-0 z-10 cursor-pointer">
                  {event.highlight_video_cover_image && (
                    <Image
                      src={event.highlight_video_cover_image}
                      alt="Video cover"
                      width={800}
                      height={450}
                      class="w-full h-full object-cover"
                      format="webp"
                    />
                  )}
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-20 h-20 bg-white rounded-full flex items-center justify-center hover:scale-110 transition-transform shadow-lg">
                      <svg class="w-10 h-10 text-gray-900 ml-1" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M8 5v14l11-7z"/>
                      </svg>
                    </div>
                  </div>
                </div>
                
                <!-- Video player container (iframe will be injected here on click) -->
                <div class="video-player-container absolute inset-0"></div>
              </div>
            ) : event.highlight_video_cover_image && (
              <Image
                src={event.highlight_video_cover_image}
                alt="Event highlight"
                width={800}
                height={450}
                class="w-full h-full object-cover"
                format="webp"
              />
            )}
          </div>
        </div>
      </div>
    </section>

    <script>
      // Video player functionality
      document.addEventListener('DOMContentLoaded', () => {
        const videoContainers = document.querySelectorAll('.video-container');
        
        videoContainers.forEach(container => {
          const videoCover = container.querySelector('.video-cover');
          const playerContainer = container.querySelector('.video-player-container');
          const videoUrl = container.getAttribute('data-video-url');
          
          if (videoCover && playerContainer && videoUrl) {
            videoCover.addEventListener('click', () => {
              // Convert video URL to embed format
              let embedUrl = videoUrl;
              
              // YouTube conversion
              if (videoUrl.includes('youtube.com/watch?v=')) {
                const videoId = videoUrl.split('watch?v=')[1].split('&')[0];
                embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0`;
              } else if (videoUrl.includes('youtu.be/')) {
                const videoId = videoUrl.split('youtu.be/')[1].split('?')[0];
                embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0`;
              } 
              // Vimeo conversion
              else if (videoUrl.includes('vimeo.com/')) {
                const videoId = videoUrl.split('vimeo.com/')[1].split('?')[0];
                embedUrl = `https://player.vimeo.com/video/${videoId}?autoplay=1`;
              }
              
              // Create and inject iframe
              const iframe = document.createElement('iframe');
              iframe.setAttribute('src', embedUrl);
              iframe.setAttribute('frameborder', '0');
              iframe.setAttribute('allow', 'autoplay; fullscreen; picture-in-picture');
              iframe.setAttribute('allowfullscreen', '');
              iframe.className = 'w-full h-full';
              
              playerContainer.appendChild(iframe);
              
              // Hide the cover
              (videoCover as HTMLElement).style.display = 'none';
            });
          }
        });
      });
    </script>

    <!-- Highlight Images Section -->
    {event.highlight_images && event.highlight_images.length > 0 && (
      <section class="py-16 md:py-24 bg-[#0E1022]">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl md:text-3xl font-bold text-white mb-12">
            // Our biggest celebration yetâ€¦
          </h2>

          <!-- Image Grid -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
            {event.highlight_images.slice(0, 3).map((image: string) => (
              <div class="aspect-[4/3] rounded-2xl overflow-hidden shadow-xl">
                <Image
                  src={image}
                  alt="Event highlight"
                  width={600}
                  height={450}
                  class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                  format="webp"
                />
              </div>
            ))}
          </div>

          {event.highlight_blurb_1 && (
            <div class="bg-gradient-to-br from-indigo-600 via-purple-600 to-indigo-700 rounded-3xl p-8 md:p-12 mb-12">
              <h3 class="text-2xl md:text-3xl font-semibold text-white mb-6">
                {event.highlight_blurb_1.split('\n')[0]}
              </h3>
              <p class="text-lg text-white/90 leading-relaxed">
                {event.highlight_blurb_1.split('\n').slice(1).join('\n')}
              </p>
            </div>
          )}

          {event.highlight_images.length > 3 && (
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
              {event.highlight_images.slice(3, 5).map((image: string) => (
                <div class="aspect-[4/3] rounded-2xl overflow-hidden shadow-xl">
                  <Image
                    src={image}
                    alt="Event highlight"
                    width={600}
                    height={450}
                    class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                    format="webp"
                  />
                </div>
              ))}
            </div>
          )}

          {event.highlight_blurb_2 && (
            <div class="bg-gradient-to-br from-purple-600 via-indigo-600 to-purple-700 rounded-3xl p-8 md:p-12">
              <h3 class="text-2xl md:text-3xl font-semibold text-white mb-6">
                {event.highlight_blurb_2.split('\n')[0]}
              </h3>
              <p class="text-lg text-white/90 leading-relaxed">
                {event.highlight_blurb_2.split('\n').slice(1).join('\n')}
              </p>
            </div>
          )}
        </div>
      </section>
    )}

    <!-- Sponsors Section -->
    {sponsors.length > 0 && (
      <section class="py-16 md:py-24 bg-white">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="text-left mb-8">
            <p class="text-sm text-gray-600 font-mono">Thank you to our Sponsors & Partners</p>
          </div>
          
          <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-8 items-center">
            {sponsors.map((sponsor: any) => (
              <div class="opacity-70 hover:opacity-100 transition-opacity flex items-center justify-start">
                {sponsor.logo_url ? (
                  <Image
                    src={sponsor.logo_url}
                    alt={sponsor.name}
                    class="max-h-12 w-auto object-contain"
                    width={120}
                    height={48}
                    loading="lazy"
                    format="webp"
                  />
                ) : (
                  <div class="h-10 w-20 bg-gray-300 rounded flex items-center justify-center text-xs">
                    {sponsor.name}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Award Ceremony Section -->
    {winners && winners.length > 0 && (
      <section class="py-16 md:py-24 bg-gray-50">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="text-center mb-12">
            <h2 class="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
              The Award Ceremony
            </h2>
            <p class="text-lg text-gray-600">
              This year saw {winners.length} winner{winners.length !== 1 ? 's' : ''} take to the stage to accept their trophies and celebrate industry successes with other finalists.
            </p>
          </div>

          <!-- Featured Winners (First 3) -->
          {featuredWinners.length > 0 && (
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
              {featuredWinners.map((winner: any) => (
                <div class="winner-featured-card bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow">
                  {winner.image_url && (
                    <div class="relative aspect-[4/3] bg-gray-900">
                      <Image
                        src={winner.image_url}
                        alt={winner.title}
                        width={600}
                        height={450}
                        class="w-full h-full object-cover"
                        format="webp"
                      />
                    </div>
                  )}
                  <div class="p-6 text-center">
                    <h3 class="text-xl font-bold text-gray-900 mb-2">{winner.title}</h3>
                    {winner.organization && (
                      <p class="text-base text-[#4923EB] mb-3 font-medium">{winner.organization}</p>
                    )}
                    <p class="text-sm text-gray-600 uppercase tracking-wide font-semibold">
                      Winner
                    </p>
                  </div>
                </div>
              ))}
            </div>
          )}

          <!-- Other Winners Grid -->
          {otherWinners.length > 0 && (
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              {otherWinners.map((winner: any) => (
                <div class="winner-card bg-white rounded-xl p-6 text-center">
                  <p class="text-xs text-gray-500 uppercase tracking-wide mb-2">
                    Winner
                  </p>
                  <h3 class="text-lg font-bold text-gray-900 mb-1">{winner.title}</h3>
                  {winner.organization && (
                    <p class="text-sm text-gray-600">By {winner.organization}</p>
                  )}
                </div>
              ))}
            </div>
          )}

          <div class="text-center mt-12">
            <a
              href={`/winners-and-finalists-${event.event_year}`}
              class="inline-block px-8 py-4 bg-[#4923EB] text-white text-base font-bold rounded-full hover:bg-[#3a1bb8] transition-colors"
            >
              See all {event.event_year} Winners & Finalists
            </a>
          </div>
        </div>
      </section>
    )}

    <!-- Menu Section -->
    {(event.menu_blurb_starter || event.menu_blurb_main || event.menu_blurb_dessert) && (
      <section class="relative py-16 md:py-24 overflow-hidden" style="background-color: #0D0F20;">
        <!-- Dotted Pattern Background - Top Left Only with Silver Gradient -->
        <div class="absolute top-0 left-0 z-0" style="
          width: 50%;
          height: 60%;
          background-image: radial-gradient(circle, rgba(200, 210, 220, 0.5) 2px, transparent 2px);
          background-size: 40px 40px;
          opacity: 1;
          mask-image: radial-gradient(ellipse at top left, rgba(0,0,0,1) 0%, rgba(0,0,0,0.8) 30%, transparent 70%);
          -webkit-mask-image: radial-gradient(ellipse at top left, rgba(0,0,0,1) 0%, rgba(0,0,0,0.8) 30%, transparent 70%);
        "></div>
        
        <div class="relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <!-- Left: Menu Content -->
            <div class="text-white">
              <h2 class="text-3xl md:text-4xl font-bold text-white mb-12">
                {event.event_year} Fine Dining Menu
              </h2>

              {event.menu_blurb_starter && (
                <div class="mb-10">
                  <h3 class="text-xl font-bold text-white mb-3">Starter</h3>
                  <p class="text-base text-white/90 leading-relaxed">{event.menu_blurb_starter}</p>
                  <div class="mt-6 border-t border-white/20"></div>
                </div>
              )}

              {event.menu_blurb_main && (
                <div class="mb-10">
                  <h3 class="text-xl font-bold text-white mb-3">Main Dish</h3>
                  <div class="space-y-2">
                    {event.menu_blurb_main.split('\n').filter((line: string) => line.trim()).map((line: string) => (
                      <p class="text-base text-white/90 leading-relaxed">{line}</p>
                    ))}
                  </div>
                  <div class="mt-6 border-t border-white/20"></div>
                </div>
              )}

              {event.menu_blurb_dessert && (
                <div>
                  <h3 class="text-xl font-bold text-white mb-3">Dessert</h3>
                  <div class="space-y-2">
                    {event.menu_blurb_dessert.split('\n').filter((line: string) => line.trim()).map((line: string) => (
                      <p class="text-base text-white/90 leading-relaxed">{line}</p>
                    ))}
                  </div>
                </div>
              )}
            </div>

            <!-- Right: Menu Image -->
            <div class="relative">
              {event.menu_images && event.menu_images.length > 0 ? (
                <div class="aspect-[3/4] rounded-2xl overflow-hidden shadow-2xl">
                  <Image
                    src={event.menu_images[0]}
                    alt="Fine dining"
                    width={600}
                    height={800}
                    class="w-full h-full object-cover"
                    format="webp"
                  />
                </div>
              ) : (
                <div class="aspect-[3/4] rounded-2xl overflow-hidden bg-gray-800/50 flex items-center justify-center">
                  <svg class="w-24 h-24 text-white/30" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>
    )}

    <!-- Entertainment Section -->
    {event.entertainment_blurb && (
      <section class="py-16 md:py-24 bg-gray-50">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div>
              <h2 class="text-2xl md:text-3xl font-bold text-gray-900 mb-6">
                Industry Made, Live Entertainment
              </h2>
              <p class="text-lg text-gray-700 leading-relaxed">
                {event.entertainment_blurb}
              </p>
            </div>

            {event.entertainment_images && event.entertainment_images.length > 0 && (
              <div class="grid grid-cols-2 gap-4">
                {event.entertainment_images.slice(0, 2).map((image: string) => (
                  <div class="aspect-[3/4] rounded-2xl overflow-hidden shadow-lg">
                    <Image
                      src={image}
                      alt="Entertainment"
                      width={400}
                      height={533}
                      class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                      format="webp"
                    />
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </section>
    )}

    <!-- CTA Section -->
    <CTAFooter />
  </main>

  <Footer />
</Layout>

<style>
  .hero-title {
    font-size: 35px;
    font-weight: 600;
  }

  .hero-subtitle {
    font-size: 16px;
    font-weight: 300;
    font-family: "IBM Plex Mono", monospace;
  }

  .winner-featured-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .winner-featured-card:hover {
    transform: translateY(-4px);
  }

  .winner-card {
    transition: all 0.3s ease;
    border: 1px solid #e5e7eb;
  }

  .winner-card:hover {
    border-color: #4923EB;
    box-shadow: 0 4px 6px -1px rgba(73, 35, 235, 0.1);
  }
</style>

